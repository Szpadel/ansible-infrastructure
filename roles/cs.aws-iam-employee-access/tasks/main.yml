- name: Create employee full access policy
  iam_managed_policy:
    policy_name: "{{ aws_iam_policy_employee_full_access }}"
    policy_description: Allow employees to have full project access
    policy: "{{ lookup('template', 'employee_full_access.policy.json') }}"
    state: present
  register: employee_full_access

- name: Create employee limited access policy
  iam_managed_policy:
    policy_name: "{{ aws_iam_policy_employee_limited_access }}"
    policy_description: Allow eployees to have read-only project access
    policy: "{{ lookup('template', 'employee_limited_access.policy.json') }}"
    state: present
  register: employee_limited_access

- name: Create employee access roles
  block:
    - name: Create role for full employee access
      iam_role:
        assume_role_policy_document: "{{ lookup('template', 'trust_main_account_to_grant_assume_role_policy_document.json') }}"
        name: "{{ aws_iam_role_employee_full_access }}"
        state: present
        managed_policy:
          - "{{ employee_full_access.policy.arn }}"

    - name: Create role for limited employee access
      iam_role:
        assume_role_policy_document: "{{ lookup('template', 'trust_main_account_to_grant_assume_role_policy_document.json') }}"
        name: "{{ aws_iam_role_employee_limited_access }}"
        state: present
        managed_policy:
          - "{{ employee_limited_access.policy.arn }}"

    - name: Create role for root access
      iam_role:
        assume_role_policy_document: "{{ lookup('template', 'trust_main_account_to_grant_assume_role_policy_document.json') }}"
        name: "{{ aws_iam_role_employee_root_access }}"
        state: present
        managed_policy:
          - arn:aws:iam::aws:policy/AdministratorAccess
  when: aws_iam_master_account_id | default(false, true)